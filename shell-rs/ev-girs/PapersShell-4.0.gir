<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Adw" version="1"/>
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gdk" version="4.0"/>
  <include name="GdkPixbuf" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="Gtk" version="4.0"/>
  <include name="PapersDocument" version="4.0"/>
  <include name="PapersView" version="4.0"/>
  <package name="papers-shell-4.0"/>
  <namespace name="PapersShell"
             version="4.0"
             shared-library="libppsshell-4.0.so.4,libppsview-4.0.so.4,libppsdocument-4.0.so.5"
             c:identifier-prefixes="Pps"
             c:symbol-prefixes="pps">
    <class name="Application"
           c:symbol-prefix="application"
           c:type="PpsApplication"
           parent="Adw.Application"
           glib:type-name="PpsApplication"
           glib:get-type="pps_application_get_type"
           glib:type-struct="ApplicationClass">
      <source-position filename="shell/pps-application.h" line="37"/>
      <implements name="Gio.ActionGroup"/>
      <implements name="Gio.ActionMap"/>
      <constructor name="new" c:identifier="pps_application_new">
        <doc xml:space="preserve"
             filename="shell/pps-application.c"
             line="69">Creates a new #PpsApplication instance.</doc>
        <source-position filename="shell/pps-application.h" line="41"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="shell/pps-application.c"
               line="74">a newly created #PpsApplication</doc>
          <type name="Application" c:type="PpsApplication*"/>
        </return-value>
      </constructor>
      <method name="get_n_windows"
              c:identifier="pps_application_get_n_windows">
        <source-position filename="shell/pps-application.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="application" transfer-ownership="none">
            <type name="Application" c:type="PpsApplication*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="open_start_view"
              c:identifier="pps_application_open_start_view">
        <source-position filename="shell/pps-application.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="application" transfer-ownership="none">
            <type name="Application" c:type="PpsApplication*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="open_uri_at_dest"
              c:identifier="pps_application_open_uri_at_dest">
        <source-position filename="shell/pps-application.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="application" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-application.c"
                 line="203">The instance of the application.</doc>
            <type name="Application" c:type="PpsApplication*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-application.c"
                 line="204">The uri to be opened.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="dest" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-application.c"
                 line="205">The #PpsLinkDest of the document.</doc>
            <type name="PapersDocument.LinkDest" c:type="PpsLinkDest*"/>
          </parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-application.c"
                 line="206">The run mode of the window.</doc>
            <type name="WindowRunMode" c:type="PpsWindowRunMode"/>
          </parameter>
          <parameter name="search_string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-application.c"
                 line="207">The word or phrase to find in the document.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open_uri_list"
              c:identifier="pps_application_open_uri_list">
        <source-position filename="shell/pps-application.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="application" transfer-ownership="none">
            <type name="Application" c:type="PpsApplication*"/>
          </instance-parameter>
          <parameter name="files" transfer-ownership="none">
            <type name="Gio.ListModel" c:type="GListModel*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="ApplicationClass"
            c:type="PpsApplicationClass"
            glib:is-gtype-struct-for="Application">
      <source-position filename="shell/pps-application.h" line="37"/>
      <field name="parent_class">
        <type name="Adw.ApplicationClass" c:type="AdwApplicationClass"/>
      </field>
    </record>
    <function-macro name="IS_METADATA"
                    c:identifier="PPS_IS_METADATA"
                    introspectable="0">
      <source-position filename="shell/pps-metadata.h" line="31"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_OBJECT"
                    c:identifier="PPS_IS_OBJECT"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="354"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_OBJECT_MANAGER_CLIENT"
                    c:identifier="PPS_IS_OBJECT_MANAGER_CLIENT"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="443"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_OBJECT_MANAGER_CLIENT_CLASS"
                    c:identifier="PPS_IS_OBJECT_MANAGER_CLIENT_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="444"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_OBJECT_PROXY"
                    c:identifier="PPS_IS_OBJECT_PROXY"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="377"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_OBJECT_PROXY_CLASS"
                    c:identifier="PPS_IS_OBJECT_PROXY_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="378"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_OBJECT_SKELETON"
                    c:identifier="PPS_IS_OBJECT_SKELETON"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="408"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_OBJECT_SKELETON_CLASS"
                    c:identifier="PPS_IS_OBJECT_SKELETON_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="409"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PAPERS_APPLICATION"
                    c:identifier="PPS_IS_PAPERS_APPLICATION"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="22"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PAPERS_APPLICATION_PROXY"
                    c:identifier="PPS_IS_PAPERS_APPLICATION_PROXY"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="107"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PAPERS_APPLICATION_PROXY_CLASS"
                    c:identifier="PPS_IS_PAPERS_APPLICATION_PROXY_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="108"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PAPERS_APPLICATION_SKELETON"
                    c:identifier="PPS_IS_PAPERS_APPLICATION_SKELETON"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="177"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PAPERS_APPLICATION_SKELETON_CLASS"
                    c:identifier="PPS_IS_PAPERS_APPLICATION_SKELETON_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="178"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PAPERS_WINDOW"
                    c:identifier="PPS_IS_PAPERS_WINDOW"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="210"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PAPERS_WINDOW_PROXY"
                    c:identifier="PPS_IS_PAPERS_WINDOW_PROXY"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="252"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PAPERS_WINDOW_PROXY_CLASS"
                    c:identifier="PPS_IS_PAPERS_WINDOW_PROXY_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="253"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PAPERS_WINDOW_SKELETON"
                    c:identifier="PPS_IS_PAPERS_WINDOW_SKELETON"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="322"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PAPERS_WINDOW_SKELETON_CLASS"
                    c:identifier="PPS_IS_PAPERS_WINDOW_SKELETON_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="323"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="METADATA"
                    c:identifier="PPS_METADATA"
                    introspectable="0">
      <source-position filename="shell/pps-metadata.h" line="29"/>
      <parameters>
        <parameter name="object">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="METADATA_CLASS"
                    c:identifier="PPS_METADATA_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-metadata.h" line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Metadata"
           c:symbol-prefix="metadata"
           c:type="PpsMetadata"
           parent="GObject.Object"
           glib:type-name="PpsMetadata"
           glib:get-type="pps_metadata_get_type"
           glib:type-struct="MetadataClass">
      <source-position filename="shell/pps-metadata.h" line="34"/>
      <constructor name="new" c:identifier="pps_metadata_new">
        <source-position filename="shell/pps-metadata.h" line="37"/>
        <return-value transfer-ownership="full">
          <type name="Metadata" c:type="PpsMetadata*"/>
        </return-value>
        <parameters>
          <parameter name="file" transfer-ownership="none">
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_boolean" c:identifier="pps_metadata_get_boolean">
        <source-position filename="shell/pps-metadata.h" line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-metadata.c"
               line="299">%TRUE on success, or %FALSE on failure.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="metadata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-metadata.c"
                 line="295">a #PpsMetadata</doc>
            <type name="Metadata" c:type="PpsMetadata*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-metadata.c"
                 line="296">The keyword of the metadata</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="shell/pps-metadata.c"
                 line="297">The value of the returned metadata</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_double" c:identifier="pps_metadata_get_double">
        <source-position filename="shell/pps-metadata.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-metadata.c"
               line="259">%TRUE on success, or %FALSE on failure.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="metadata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-metadata.c"
                 line="255">a #PpsMetadata</doc>
            <type name="Metadata" c:type="PpsMetadata*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-metadata.c"
                 line="256">The keyword of the metadata</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="shell/pps-metadata.c"
                 line="257">The value of the returned metadata</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_int" c:identifier="pps_metadata_get_int">
        <source-position filename="shell/pps-metadata.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-metadata.c"
               line="218">%TRUE on success, or %FALSE on failure.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="metadata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-metadata.c"
                 line="214">a #PpsMetadata</doc>
            <type name="Metadata" c:type="PpsMetadata*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-metadata.c"
                 line="215">The keyword of the metadata</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="shell/pps-metadata.c"
                 line="216">The value of the returned metadata</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_string" c:identifier="pps_metadata_get_string">
        <source-position filename="shell/pps-metadata.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-metadata.c"
               line="146">%TRUE on success, or %FALSE on failure.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="metadata" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-metadata.c"
                 line="142">a #PpsMetadata</doc>
            <type name="Metadata" c:type="PpsMetadata*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-metadata.c"
                 line="143">The keyword of the metadata</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-metadata.c"
                 line="144">The value of the returned metadata</doc>
            <type name="utf8" c:type="const gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_key" c:identifier="pps_metadata_has_key">
        <source-position filename="shell/pps-metadata.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="metadata" transfer-ownership="none">
            <type name="Metadata" c:type="PpsMetadata*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_empty" c:identifier="pps_metadata_is_empty">
        <source-position filename="shell/pps-metadata.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="metadata" transfer-ownership="none">
            <type name="Metadata" c:type="PpsMetadata*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_boolean" c:identifier="pps_metadata_set_boolean">
        <source-position filename="shell/pps-metadata.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="metadata" transfer-ownership="none">
            <type name="Metadata" c:type="PpsMetadata*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_double" c:identifier="pps_metadata_set_double">
        <source-position filename="shell/pps-metadata.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="metadata" transfer-ownership="none">
            <type name="Metadata" c:type="PpsMetadata*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_int" c:identifier="pps_metadata_set_int">
        <source-position filename="shell/pps-metadata.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="metadata" transfer-ownership="none">
            <type name="Metadata" c:type="PpsMetadata*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_string" c:identifier="pps_metadata_set_string">
        <source-position filename="shell/pps-metadata.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="metadata" transfer-ownership="none">
            <type name="Metadata" c:type="PpsMetadata*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="MetadataClass"
            c:type="PpsMetadataClass"
            disguised="1"
            opaque="1"
            glib:is-gtype-struct-for="Metadata">
      <source-position filename="shell/pps-metadata.h" line="34"/>
    </record>
    <function-macro name="OBJECT" c:identifier="PPS_OBJECT" introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="353"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OBJECT_GET_IFACE"
                    c:identifier="PPS_OBJECT_GET_IFACE"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="355"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OBJECT_MANAGER_CLIENT"
                    c:identifier="PPS_OBJECT_MANAGER_CLIENT"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="440"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OBJECT_MANAGER_CLIENT_CLASS"
                    c:identifier="PPS_OBJECT_MANAGER_CLIENT_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="441"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OBJECT_MANAGER_CLIENT_GET_CLASS"
                    c:identifier="PPS_OBJECT_MANAGER_CLIENT_GET_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="442"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OBJECT_PROXY"
                    c:identifier="PPS_OBJECT_PROXY"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="374"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OBJECT_PROXY_CLASS"
                    c:identifier="PPS_OBJECT_PROXY_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="375"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OBJECT_PROXY_GET_CLASS"
                    c:identifier="PPS_OBJECT_PROXY_GET_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="376"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OBJECT_SKELETON"
                    c:identifier="PPS_OBJECT_SKELETON"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="405"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OBJECT_SKELETON_CLASS"
                    c:identifier="PPS_OBJECT_SKELETON_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="406"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OBJECT_SKELETON_GET_CLASS"
                    c:identifier="PPS_OBJECT_SKELETON_GET_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="407"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <interface name="Object"
               c:symbol-prefix="object"
               c:type="PpsObject"
               glib:type-name="PpsObject"
               glib:get-type="pps_object_get_type"
               glib:type-struct="ObjectIface">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="2295">The #PpsObject type is a specialized container of interfaces.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="364"/>
      <prerequisite name="Gio.DBusObject"/>
      <method name="get_papers_application"
              c:identifier="pps_object_get_papers_application"
              glib:get-property="papers-application">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2334">Gets the #PpsPapersApplication instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Papers-Application.top_of_page"&gt;org.gnome.Papers.Application&lt;/link&gt; on @object, if any.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="368"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="2340">A #PpsPapersApplication that must be freed with g_object_unref() or %NULL if @object does not implement the interface.</doc>
          <type name="PapersApplication" c:type="PpsPapersApplication*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2336">A #PpsObject.</doc>
            <type name="Object" c:type="PpsObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_papers_window"
              c:identifier="pps_object_get_papers_window"
              glib:get-property="papers-window">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2351">Gets the #PpsPapersWindow instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Papers-Window.top_of_page"&gt;org.gnome.Papers.Window&lt;/link&gt; on @object, if any.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="369"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="2357">A #PpsPapersWindow that must be freed with g_object_unref() or %NULL if @object does not implement the interface.</doc>
          <type name="PapersWindow" c:type="PpsPapersWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2353">A #PpsObject.</doc>
            <type name="Object" c:type="PpsObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="peek_papers_application"
              c:identifier="pps_object_peek_papers_application"
              introspectable="0">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2369">Like pps_object_get_papers_application() but doesn't increase the reference count on the returned object.

It is not safe to use the returned object if you are on another thread than the one where the #GDBusObjectManagerClient or #GDBusObjectManagerServer for @object is running.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="370"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="2377">A #PpsPapersApplication or %NULL if @object does not implement the interface. Do not free the returned object, it is owned by @object.</doc>
          <type name="PapersApplication" c:type="PpsPapersApplication*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2371">A #PpsObject.</doc>
            <type name="Object" c:type="PpsObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="peek_papers_window"
              c:identifier="pps_object_peek_papers_window"
              introspectable="0">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2389">Like pps_object_get_papers_window() but doesn't increase the reference count on the returned object.

It is not safe to use the returned object if you are on another thread than the one where the #GDBusObjectManagerClient or #GDBusObjectManagerServer for @object is running.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="371"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="2397">A #PpsPapersWindow or %NULL if @object does not implement the interface. Do not free the returned object, it is owned by @object.</doc>
          <type name="PapersWindow" c:type="PpsPapersWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2391">A #PpsObject.</doc>
            <type name="Object" c:type="PpsObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="papers-application"
                writable="1"
                transfer-ownership="none"
                getter="get_papers_application">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2314">The #PpsPapersApplication instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Papers-Application.top_of_page"&gt;org.gnome.Papers.Application&lt;/link&gt;, if any.

Connect to the #GObject::notify signal to get informed of property changes.</doc>
        <type name="PapersApplication"/>
      </property>
      <property name="papers-window"
                writable="1"
                transfer-ownership="none"
                getter="get_papers_window">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2323">The #PpsPapersWindow instance corresponding to the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Papers-Window.top_of_page"&gt;org.gnome.Papers.Window&lt;/link&gt;, if any.

Connect to the #GObject::notify signal to get informed of property changes.</doc>
        <type name="PapersWindow"/>
      </property>
    </interface>
    <record name="ObjectIface"
            c:type="PpsObjectIface"
            glib:is-gtype-struct-for="Object">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="2301">Virtual table for the #PpsObject interface.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="364"/>
      <field name="parent_iface">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2303">The parent interface.</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
    </record>
    <class name="ObjectManagerClient"
           c:symbol-prefix="object_manager_client"
           c:type="PpsObjectManagerClient"
           parent="Gio.DBusObjectManagerClient"
           glib:type-name="PpsObjectManagerClient"
           glib:get-type="pps_object_manager_client_get_type"
           glib:type-struct="ObjectManagerClientClass">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="2692">The #PpsObjectManagerClient structure contains only private data and should only be accessed using the provided API.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="460"/>
      <implements name="Gio.AsyncInitable"/>
      <implements name="Gio.DBusObjectManager"/>
      <implements name="Gio.Initable"/>
      <constructor name="new_finish"
                   c:identifier="pps_object_manager_client_new_finish"
                   throws="1">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2780">Finishes an operation started with pps_object_manager_client_new().</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="478"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="2787">The constructed object manager client or %NULL if @error is set.</doc>
          <type name="ObjectManagerClient" c:type="GDBusObjectManager*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2782">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to pps_object_manager_client_new().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_bus_finish"
                   c:identifier="pps_object_manager_client_new_for_bus_finish"
                   throws="1">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2870">Finishes an operation started with pps_object_manager_client_new_for_bus().</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="497"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="2877">The constructed object manager client or %NULL if @error is set.</doc>
          <type name="ObjectManagerClient" c:type="GDBusObjectManager*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2872">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to pps_object_manager_client_new_for_bus().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_bus_sync"
                   c:identifier="pps_object_manager_client_new_for_bus_sync"
                   throws="1">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2895">Like pps_object_manager_client_new_sync() but takes a #GBusType instead of a #GDBusConnection.

The calling thread is blocked until a reply is received.

See pps_object_manager_client_new_for_bus() for the asynchronous version of this constructor.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="500"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="2910">The constructed object manager client or %NULL if @error is set.</doc>
          <type name="ObjectManagerClient" c:type="GDBusObjectManager*"/>
        </return-value>
        <parameters>
          <parameter name="bus_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2897">A #GBusType.</doc>
            <type name="Gio.BusType" c:type="GBusType"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2898">Flags from the #GDBusObjectManagerClientFlags enumeration.</doc>
            <type name="Gio.DBusObjectManagerClientFlags"
                  c:type="GDBusObjectManagerClientFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2899">A bus name (well-known or unique).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2900">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2901">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_sync"
                   c:identifier="pps_object_manager_client_new_sync"
                   throws="1">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2805">Synchronously creates #GDBusObjectManagerClient using pps_object_manager_client_get_proxy_type() as the #GDBusProxyTypeFunc. See g_dbus_object_manager_client_new_sync() for more details.

The calling thread is blocked until a reply is received.

See pps_object_manager_client_new() for the asynchronous version of this constructor.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="481"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="2820">The constructed object manager client or %NULL if @error is set.</doc>
          <type name="ObjectManagerClient" c:type="GDBusObjectManager*"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2807">A #GDBusConnection.</doc>
            <type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2808">Flags from the #GDBusObjectManagerClientFlags enumeration.</doc>
            <type name="Gio.DBusObjectManagerClientFlags"
                  c:type="GDBusObjectManagerClientFlags"/>
          </parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2809">A bus name (well-known or unique) or %NULL if @connection is not a message bus connection.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2810">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2811">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="get_proxy_type"
                c:identifier="pps_object_manager_client_get_proxy_type">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2717">A #GDBusProxyTypeFunc that maps @interface_name to the generated #GDBusObjectProxy derived and #GDBusProxy derived types.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="468"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="2726">A #GDBusProxy derived #GType if @interface_name is not %NULL, otherwise the #GType for #PpsObjectProxy.</doc>
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2719">A #GDBusObjectManagerClient.</doc>
            <type name="Gio.DBusObjectManagerClient"
                  c:type="GDBusObjectManagerClient*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2720">The object path of the remote object (unused).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="interface_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2721">Interface name of the remote object or %NULL to get the object proxy #GType.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2722">User data (unused).</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="new"
                c:identifier="pps_object_manager_client_new"
                glib:finish-func="new_finish">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2750">Asynchronously creates #GDBusObjectManagerClient using pps_object_manager_client_get_proxy_type() as the #GDBusProxyTypeFunc. See g_dbus_object_manager_client_new() for more details.

When the operation is finished, @callback will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
You can then call pps_object_manager_client_new_finish() to get the result of the operation.

See pps_object_manager_client_new_sync() for the synchronous, blocking version of this constructor.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="470"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2752">A #GDBusConnection.</doc>
            <type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2753">Flags from the #GDBusObjectManagerClientFlags enumeration.</doc>
            <type name="Gio.DBusObjectManagerClientFlags"
                  c:type="GDBusObjectManagerClientFlags"/>
          </parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2754">A bus name (well-known or unique) or %NULL if @connection is not a message bus connection.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2755">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2756">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2757">A #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2758">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_for_bus"
                c:identifier="pps_object_manager_client_new_for_bus"
                glib:finish-func="new_for_bus_finish">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2840">Like pps_object_manager_client_new() but takes a #GBusType instead of a #GDBusConnection.

When the operation is finished, @callback will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
You can then call pps_object_manager_client_new_for_bus_finish() to get the result of the operation.

See pps_object_manager_client_new_for_bus_sync() for the synchronous, blocking version of this constructor.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="489"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="bus_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2842">A #GBusType.</doc>
            <type name="Gio.BusType" c:type="GBusType"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2843">Flags from the #GDBusObjectManagerClientFlags enumeration.</doc>
            <type name="Gio.DBusObjectManagerClientFlags"
                  c:type="GDBusObjectManagerClientFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2844">A bus name (well-known or unique).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2845">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2846">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2847">A #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2848">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <field name="parent_instance" readable="0" private="1">
        <type name="Gio.DBusObjectManagerClient"
              c:type="GDBusObjectManagerClient"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ObjectManagerClientPrivate"
              c:type="PpsObjectManagerClientPrivate*"/>
      </field>
    </class>
    <record name="ObjectManagerClientClass"
            c:type="PpsObjectManagerClientClass"
            glib:is-gtype-struct-for="ObjectManagerClient">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="2698">Class structure for #PpsObjectManagerClient.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="460"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2700">The parent class.</doc>
        <type name="Gio.DBusObjectManagerClientClass"
              c:type="GDBusObjectManagerClientClass"/>
      </field>
    </record>
    <record name="ObjectManagerClientPrivate"
            c:type="PpsObjectManagerClientPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="shell/pps-gdbus-generated.h" line="448"/>
    </record>
    <class name="ObjectProxy"
           c:symbol-prefix="object_proxy"
           c:type="PpsObjectProxy"
           parent="Gio.DBusObjectProxy"
           glib:type-name="PpsObjectProxy"
           glib:get-type="pps_object_proxy_get_type"
           glib:type-struct="ObjectProxyClass">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="2421">The #PpsObjectProxy structure contains only private data and should only be accessed using the provided API.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="394"/>
      <implements name="Gio.DBusObject"/>
      <implements name="Object"/>
      <constructor name="new" c:identifier="pps_object_proxy_new">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2504">Creates a new proxy object.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="402"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="2511">The proxy object.</doc>
          <type name="ObjectProxy" c:type="PpsObjectProxy*"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2506">A #GDBusConnection.</doc>
            <type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2507">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance" readable="0" private="1">
        <type name="Gio.DBusObjectProxy" c:type="GDBusObjectProxy"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ObjectProxyPrivate" c:type="PpsObjectProxyPrivate*"/>
      </field>
    </class>
    <record name="ObjectProxyClass"
            c:type="PpsObjectProxyClass"
            glib:is-gtype-struct-for="ObjectProxy">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="2427">Class structure for #PpsObjectProxy.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="394"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2429">The parent class.</doc>
        <type name="Gio.DBusObjectProxyClass" c:type="GDBusObjectProxyClass"/>
      </field>
    </record>
    <record name="ObjectProxyPrivate"
            c:type="PpsObjectProxyPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="shell/pps-gdbus-generated.h" line="382"/>
    </record>
    <class name="ObjectSkeleton"
           c:symbol-prefix="object_skeleton"
           c:type="PpsObjectSkeleton"
           parent="Gio.DBusObjectSkeleton"
           glib:type-name="PpsObjectSkeleton"
           glib:get-type="pps_object_skeleton_get_type"
           glib:type-struct="ObjectSkeletonClass">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="2522">The #PpsObjectSkeleton structure contains only private data and should only be accessed using the provided API.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="425"/>
      <implements name="Gio.DBusObject"/>
      <implements name="Object"/>
      <constructor name="new" c:identifier="pps_object_skeleton_new">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2639">Creates a new skeleton object.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="433"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="2645">The skeleton object.</doc>
          <type name="ObjectSkeleton" c:type="PpsObjectSkeleton*"/>
        </return-value>
        <parameters>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2641">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_papers_application"
              c:identifier="pps_object_skeleton_set_papers_application">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2654">Sets the #PpsPapersApplication instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Papers-Application.top_of_page"&gt;org.gnome.Papers.Application&lt;/link&gt; on @object.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="434"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2656">A #PpsObjectSkeleton.</doc>
            <type name="ObjectSkeleton" c:type="PpsObjectSkeleton*"/>
          </instance-parameter>
          <parameter name="interface_"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2657">A #PpsPapersApplication or %NULL to clear the interface.</doc>
            <type name="PapersApplication" c:type="PpsPapersApplication*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_papers_window"
              c:identifier="pps_object_skeleton_set_papers_window">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2666">Sets the #PpsPapersWindow instance for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Papers-Window.top_of_page"&gt;org.gnome.Papers.Window&lt;/link&gt; on @object.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="435"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2668">A #PpsObjectSkeleton.</doc>
            <type name="ObjectSkeleton" c:type="PpsObjectSkeleton*"/>
          </instance-parameter>
          <parameter name="interface_"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="2669">A #PpsPapersWindow or %NULL to clear the interface.</doc>
            <type name="PapersWindow" c:type="PpsPapersWindow*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance" readable="0" private="1">
        <type name="Gio.DBusObjectSkeleton" c:type="GDBusObjectSkeleton"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ObjectSkeletonPrivate" c:type="PpsObjectSkeletonPrivate*"/>
      </field>
    </class>
    <record name="ObjectSkeletonClass"
            c:type="PpsObjectSkeletonClass"
            glib:is-gtype-struct-for="ObjectSkeleton">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="2528">Class structure for #PpsObjectSkeleton.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="425"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2530">The parent class.</doc>
        <type name="Gio.DBusObjectSkeletonClass"
              c:type="GDBusObjectSkeletonClass"/>
      </field>
    </record>
    <record name="ObjectSkeletonPrivate"
            c:type="PpsObjectSkeletonPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="shell/pps-gdbus-generated.h" line="413"/>
    </record>
    <function-macro name="PAPERS_APPLICATION"
                    c:identifier="PPS_PAPERS_APPLICATION"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="21"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAPERS_APPLICATION_GET_IFACE"
                    c:identifier="PPS_PAPERS_APPLICATION_GET_IFACE"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="23"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAPERS_APPLICATION_PROXY"
                    c:identifier="PPS_PAPERS_APPLICATION_PROXY"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="104"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAPERS_APPLICATION_PROXY_CLASS"
                    c:identifier="PPS_PAPERS_APPLICATION_PROXY_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="105"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAPERS_APPLICATION_PROXY_GET_CLASS"
                    c:identifier="PPS_PAPERS_APPLICATION_PROXY_GET_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="106"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAPERS_APPLICATION_SKELETON"
                    c:identifier="PPS_PAPERS_APPLICATION_SKELETON"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="174"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAPERS_APPLICATION_SKELETON_CLASS"
                    c:identifier="PPS_PAPERS_APPLICATION_SKELETON_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="175"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAPERS_APPLICATION_SKELETON_GET_CLASS"
                    c:identifier="PPS_PAPERS_APPLICATION_SKELETON_GET_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="176"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAPERS_WINDOW"
                    c:identifier="PPS_PAPERS_WINDOW"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="209"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAPERS_WINDOW_GET_IFACE"
                    c:identifier="PPS_PAPERS_WINDOW_GET_IFACE"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="211"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAPERS_WINDOW_PROXY"
                    c:identifier="PPS_PAPERS_WINDOW_PROXY"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="249"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAPERS_WINDOW_PROXY_CLASS"
                    c:identifier="PPS_PAPERS_WINDOW_PROXY_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="250"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAPERS_WINDOW_PROXY_GET_CLASS"
                    c:identifier="PPS_PAPERS_WINDOW_PROXY_GET_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="251"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAPERS_WINDOW_SKELETON"
                    c:identifier="PPS_PAPERS_WINDOW_SKELETON"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="319"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAPERS_WINDOW_SKELETON_CLASS"
                    c:identifier="PPS_PAPERS_WINDOW_SKELETON_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="320"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAPERS_WINDOW_SKELETON_GET_CLASS"
                    c:identifier="PPS_PAPERS_WINDOW_SKELETON_GET_CLASS"
                    introspectable="0">
      <source-position filename="shell/pps-gdbus-generated.h" line="321"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <interface name="PapersApplication"
               c:symbol-prefix="papers_application"
               c:type="PpsPapersApplication"
               glib:type-name="PpsPapersApplication"
               glib:get-type="pps_papers_application_get_type"
               glib:type-struct="PapersApplicationIface">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="441">Abstract interface type for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Papers-Application.top_of_page"&gt;org.gnome.Papers.Application&lt;/link&gt;.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="42"/>
      <function name="interface_info"
                c:identifier="pps_papers_application_interface_info">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="384">Gets a machine-readable description of the &lt;link linkend="gdbus-interface-org-gnome-Papers-Application.top_of_page"&gt;org.gnome.Papers.Application&lt;/link&gt; D-Bus interface.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="389">A #GDBusInterfaceInfo. Do not free.</doc>
          <type name="Gio.DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
        </return-value>
      </function>
      <function name="override_properties"
                c:identifier="pps_papers_application_override_properties">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="397">Overrides all #GObject properties in the #PpsPapersApplication interface for a concrete class.
The properties are overridden in the order they are defined.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="405">The last property id.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="399">The class structure for a #GObject derived class.</doc>
            <type name="GObject.ObjectClass" c:type="GObjectClass*"/>
          </parameter>
          <parameter name="property_id_begin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="400">The property id to assign to the first overridden property.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="handle_get_window_list">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="450">Handler for the #PpsPapersApplication::handle-get-window-list signal.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="33"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="PapersApplication" c:type="PpsPapersApplication*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="none">
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_reload">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="451">Handler for the #PpsPapersApplication::handle-reload signal.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="37"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="PapersApplication" c:type="PpsPapersApplication*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="none">
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
          <parameter name="arg_args" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="call_get_window_list"
              c:identifier="pps_papers_application_call_get_window_list"
              glib:finish-func="call_get_window_list_finish"
              glib:sync-func="call_get_window_list_sync">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="608">Asynchronously invokes the &lt;link linkend="gdbus-method-org-gnome-Papers-Application.GetWindowList"&gt;GetWindowList()&lt;/link&gt; D-Bus method on @proxy.
When the operation is finished, @callback will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
You can then call pps_papers_application_call_get_window_list_finish() to get the result of the operation.

See pps_papers_application_call_get_window_list_sync() for the synchronous, blocking version of this method.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="610">A #PpsPapersApplicationProxy.</doc>
            <type name="PapersApplication" c:type="PpsPapersApplication*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="611">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="612">A #GAsyncReadyCallback to call when the request is satisfied or %NULL.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="613">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_get_window_list_finish"
              c:identifier="pps_papers_application_call_get_window_list_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="638">Finishes an operation started with pps_papers_application_call_get_window_list().</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="87"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="647">%TRUE if the call succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="640">A #PpsPapersApplicationProxy.</doc>
            <type name="PapersApplication" c:type="PpsPapersApplication*"/>
          </instance-parameter>
          <parameter name="out_window_list"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="641">Return location for return parameter or %NULL to ignore.</doc>
            <array c:type="gchar***">
              <type name="utf8" c:type="gchar**"/>
            </array>
          </parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="642">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to pps_papers_application_call_get_window_list().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_get_window_list_sync"
              c:identifier="pps_papers_application_call_get_window_list_sync"
              throws="1"
              glib:async-func="call_get_window_list">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="668">Synchronously invokes the &lt;link linkend="gdbus-method-org-gnome-Papers-Application.GetWindowList"&gt;GetWindowList()&lt;/link&gt; D-Bus method on @proxy. The calling thread is blocked until a reply is received.

See pps_papers_application_call_get_window_list() for the asynchronous version of this method.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="93"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="679">%TRUE if the call succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="670">A #PpsPapersApplicationProxy.</doc>
            <type name="PapersApplication" c:type="PpsPapersApplication*"/>
          </instance-parameter>
          <parameter name="out_window_list"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="671">Return location for return parameter or %NULL to ignore.</doc>
            <array c:type="gchar***">
              <type name="utf8" c:type="gchar**"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="672">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_reload"
              c:identifier="pps_papers_application_call_reload"
              glib:finish-func="call_reload_finish"
              glib:sync-func="call_reload_sync">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="510">Asynchronously invokes the &lt;link linkend="gdbus-method-org-gnome-Papers-Application.Reload"&gt;Reload()&lt;/link&gt; D-Bus method on @proxy.
When the operation is finished, @callback will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
You can then call pps_papers_application_call_reload_finish() to get the result of the operation.

See pps_papers_application_call_reload_sync() for the synchronous, blocking version of this method.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="512">A #PpsPapersApplicationProxy.</doc>
            <type name="PapersApplication" c:type="PpsPapersApplication*"/>
          </instance-parameter>
          <parameter name="arg_args" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="513">Argument to pass with the method invocation.</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="514">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="515">A #GAsyncReadyCallback to call when the request is satisfied or %NULL.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="516">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_reload_finish"
              c:identifier="pps_papers_application_call_reload_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="543">Finishes an operation started with pps_papers_application_call_reload().</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="70"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="551">%TRUE if the call succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="545">A #PpsPapersApplicationProxy.</doc>
            <type name="PapersApplication" c:type="PpsPapersApplication*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="546">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to pps_papers_application_call_reload().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_reload_sync"
              c:identifier="pps_papers_application_call_reload_sync"
              throws="1"
              glib:async-func="call_reload">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="570">Synchronously invokes the &lt;link linkend="gdbus-method-org-gnome-Papers-Application.Reload"&gt;Reload()&lt;/link&gt; D-Bus method on @proxy. The calling thread is blocked until a reply is received.

See pps_papers_application_call_reload() for the asynchronous version of this method.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="75"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="581">%TRUE if the call succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="572">A #PpsPapersApplicationProxy.</doc>
            <type name="PapersApplication" c:type="PpsPapersApplication*"/>
          </instance-parameter>
          <parameter name="arg_args" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="573">Argument to pass with the method invocation.</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="574">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete_get_window_list"
              c:identifier="pps_papers_application_complete_get_window_list">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="724">Helper function used in service implementations to finish handling invocations of the &lt;link linkend="gdbus-method-org-gnome-Papers-Application.GetWindowList"&gt;GetWindowList()&lt;/link&gt; D-Bus method. If you instead want to finish handling an invocation by returning an error, use g_dbus_method_invocation_return_error() or similar.

This method will free @invocation, you cannot use it afterwards.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="726">A #PpsPapersApplication.</doc>
            <type name="PapersApplication" c:type="PpsPapersApplication*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="727">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
          <parameter name="window_list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="728">Parameter to return.</doc>
            <type name="utf8" c:type="const gchar* const*"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete_reload"
              c:identifier="pps_papers_application_complete_reload">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="706">Helper function used in service implementations to finish handling invocations of the &lt;link linkend="gdbus-method-org-gnome-Papers-Application.Reload"&gt;Reload()&lt;/link&gt; D-Bus method. If you instead want to finish handling an invocation by returning an error, use g_dbus_method_invocation_return_error() or similar.

This method will free @invocation, you cannot use it afterwards.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="708">A #PpsPapersApplication.</doc>
            <type name="PapersApplication" c:type="PpsPapersApplication*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="709">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="handle-get-window-list" when="last">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="486">Signal emitted when a remote caller is invoking the &lt;link linkend="gdbus-method-org-gnome-Papers-Application.GetWindowList"&gt;GetWindowList()&lt;/link&gt; D-Bus method.

If a signal handler returns %TRUE, it means the signal handler will handle the invocation (e.g. take a reference to @invocation and eventually call pps_papers_application_complete_get_window_list() or e.g. g_dbus_method_invocation_return_error() on it) and no other signal handlers will run. If no signal handler handles the invocation, the %G_DBUS_ERROR_UNKNOWN_METHOD error is returned.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="495">%G_DBUS_METHOD_INVOCATION_HANDLED or %TRUE if the invocation was handled, %G_DBUS_METHOD_INVOCATION_UNHANDLED or %FALSE to let other signal handlers run.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="invocation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="489">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="handle-reload" when="last">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="463">Signal emitted when a remote caller is invoking the &lt;link linkend="gdbus-method-org-gnome-Papers-Application.Reload"&gt;Reload()&lt;/link&gt; D-Bus method.

If a signal handler returns %TRUE, it means the signal handler will handle the invocation (e.g. take a reference to @invocation and eventually call pps_papers_application_complete_reload() or e.g. g_dbus_method_invocation_return_error() on it) and no other signal handlers will run. If no signal handler handles the invocation, the %G_DBUS_ERROR_UNKNOWN_METHOD error is returned.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="473">%G_DBUS_METHOD_INVOCATION_HANDLED or %TRUE if the invocation was handled, %G_DBUS_METHOD_INVOCATION_UNHANDLED or %FALSE to let other signal handlers run.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="invocation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="466">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"/>
          </parameter>
          <parameter name="arg_args" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="467">Argument passed by remote caller.</doc>
            <type name="GLib.Variant"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <record name="PapersApplicationIface"
            c:type="PpsPapersApplicationIface"
            glib:is-gtype-struct-for="PapersApplication">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="447">Virtual table for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Papers-Application.top_of_page"&gt;org.gnome.Papers.Application&lt;/link&gt;.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="42"/>
      <field name="parent_iface">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="449">The parent interface.</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="handle_get_window_list">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="450">Handler for the #PpsPapersApplication::handle-get-window-list signal.</doc>
        <callback name="handle_get_window_list">
          <source-position filename="shell/pps-gdbus-generated.h" line="33"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="PapersApplication" c:type="PpsPapersApplication*"/>
            </parameter>
            <parameter name="invocation" transfer-ownership="none">
              <type name="Gio.DBusMethodInvocation"
                    c:type="GDBusMethodInvocation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="handle_reload">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="451">Handler for the #PpsPapersApplication::handle-reload signal.</doc>
        <callback name="handle_reload">
          <source-position filename="shell/pps-gdbus-generated.h" line="37"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="PapersApplication" c:type="PpsPapersApplication*"/>
            </parameter>
            <parameter name="invocation" transfer-ownership="none">
              <type name="Gio.DBusMethodInvocation"
                    c:type="GDBusMethodInvocation*"/>
            </parameter>
            <parameter name="arg_args" transfer-ownership="none">
              <type name="GLib.Variant" c:type="GVariant*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="PapersApplicationProxy"
           c:symbol-prefix="papers_application_proxy"
           c:type="PpsPapersApplicationProxy"
           parent="Gio.DBusProxy"
           glib:type-name="PpsPapersApplicationProxy"
           glib:get-type="pps_papers_application_proxy_get_type"
           glib:type-struct="PapersApplicationProxyClass">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="747">The #PpsPapersApplicationProxy structure contains only private data and should only be accessed using the provided API.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="124"/>
      <implements name="Gio.AsyncInitable"/>
      <implements name="Gio.DBusInterface"/>
      <implements name="Gio.Initable"/>
      <implements name="PapersApplication"/>
      <constructor name="new_finish"
                   c:identifier="pps_papers_application_proxy_new_finish"
                   throws="1">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="938">Finishes an operation started with pps_papers_application_proxy_new().</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="140"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="945">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="PapersApplicationProxy" c:type="PpsPapersApplication*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="940">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to pps_papers_application_proxy_new().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_bus_finish"
                   c:identifier="pps_papers_application_proxy_new_for_bus_finish"
                   throws="1">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1028">Finishes an operation started with pps_papers_application_proxy_new_for_bus().</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="159"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="1035">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="PapersApplicationProxy" c:type="PpsPapersApplication*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1030">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to pps_papers_application_proxy_new_for_bus().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_bus_sync"
                   c:identifier="pps_papers_application_proxy_new_for_bus_sync"
                   throws="1">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1053">Like pps_papers_application_proxy_new_sync() but takes a #GBusType instead of a #GDBusConnection.

The calling thread is blocked until a reply is received.

See pps_papers_application_proxy_new_for_bus() for the asynchronous version of this constructor.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="162"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="1068">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="PapersApplicationProxy" c:type="PpsPapersApplication*"/>
        </return-value>
        <parameters>
          <parameter name="bus_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1055">A #GBusType.</doc>
            <type name="Gio.BusType" c:type="GBusType"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1056">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1057">A bus name (well-known or unique).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1058">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1059">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_sync"
                   c:identifier="pps_papers_application_proxy_new_sync"
                   throws="1">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="963">Synchronously creates a proxy for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Papers-Application.top_of_page"&gt;org.gnome.Papers.Application&lt;/link&gt;. See g_dbus_proxy_new_sync() for more details.

The calling thread is blocked until a reply is received.

See pps_papers_application_proxy_new() for the asynchronous version of this constructor.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="143"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="978">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="PapersApplicationProxy" c:type="PpsPapersApplication*"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="965">A #GDBusConnection.</doc>
            <type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="966">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="967">A bus name (well-known or unique) or %NULL if @connection is not a message bus connection.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="968">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="969">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="new"
                c:identifier="pps_papers_application_proxy_new"
                glib:finish-func="new_finish">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="908">Asynchronously creates a proxy for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Papers-Application.top_of_page"&gt;org.gnome.Papers.Application&lt;/link&gt;. See g_dbus_proxy_new() for more details.

When the operation is finished, @callback will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
You can then call pps_papers_application_proxy_new_finish() to get the result of the operation.

See pps_papers_application_proxy_new_sync() for the synchronous, blocking version of this constructor.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="132"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="910">A #GDBusConnection.</doc>
            <type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="911">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="912">A bus name (well-known or unique) or %NULL if @connection is not a message bus connection.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="913">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="914">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="915">A #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="916">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_for_bus"
                c:identifier="pps_papers_application_proxy_new_for_bus"
                glib:finish-func="new_for_bus_finish">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="998">Like pps_papers_application_proxy_new() but takes a #GBusType instead of a #GDBusConnection.

When the operation is finished, @callback will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
You can then call pps_papers_application_proxy_new_for_bus_finish() to get the result of the operation.

See pps_papers_application_proxy_new_for_bus_sync() for the synchronous, blocking version of this constructor.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="151"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="bus_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1000">A #GBusType.</doc>
            <type name="Gio.BusType" c:type="GBusType"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1001">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1002">A bus name (well-known or unique).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1003">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1004">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1005">A #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1006">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <field name="parent_instance" readable="0" private="1">
        <type name="Gio.DBusProxy" c:type="GDBusProxy"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="PapersApplicationProxyPrivate"
              c:type="PpsPapersApplicationProxyPrivate*"/>
      </field>
    </class>
    <record name="PapersApplicationProxyClass"
            c:type="PpsPapersApplicationProxyClass"
            glib:is-gtype-struct-for="PapersApplicationProxy">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="753">Class structure for #PpsPapersApplicationProxy.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="124"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="755">The parent class.</doc>
        <type name="Gio.DBusProxyClass" c:type="GDBusProxyClass"/>
      </field>
    </record>
    <record name="PapersApplicationProxyPrivate"
            c:type="PpsPapersApplicationProxyPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="shell/pps-gdbus-generated.h" line="112"/>
    </record>
    <class name="PapersApplicationSkeleton"
           c:symbol-prefix="papers_application_skeleton"
           c:type="PpsPapersApplicationSkeleton"
           parent="Gio.DBusInterfaceSkeleton"
           glib:type-name="PpsPapersApplicationSkeleton"
           glib:get-type="pps_papers_application_skeleton_get_type"
           glib:type-struct="PapersApplicationSkeletonClass">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="1090">The #PpsPapersApplicationSkeleton structure contains only private data and should only be accessed using the provided API.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="194"/>
      <implements name="Gio.DBusInterface"/>
      <implements name="PapersApplication"/>
      <constructor name="new"
                   c:identifier="pps_papers_application_skeleton_new">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1361">Creates a skeleton object for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Papers-Application.top_of_page"&gt;org.gnome.Papers.Application&lt;/link&gt;.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="202"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="1366">The skeleton object.</doc>
          <type name="PapersApplicationSkeleton"
                c:type="PpsPapersApplication*"/>
        </return-value>
      </constructor>
      <field name="parent_instance" readable="0" private="1">
        <type name="Gio.DBusInterfaceSkeleton"
              c:type="GDBusInterfaceSkeleton"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="PapersApplicationSkeletonPrivate"
              c:type="PpsPapersApplicationSkeletonPrivate*"/>
      </field>
    </class>
    <record name="PapersApplicationSkeletonClass"
            c:type="PpsPapersApplicationSkeletonClass"
            glib:is-gtype-struct-for="PapersApplicationSkeleton">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="1096">Class structure for #PpsPapersApplicationSkeleton.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="194"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1098">The parent class.</doc>
        <type name="Gio.DBusInterfaceSkeletonClass"
              c:type="GDBusInterfaceSkeletonClass"/>
      </field>
    </record>
    <record name="PapersApplicationSkeletonPrivate"
            c:type="PpsPapersApplicationSkeletonPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="shell/pps-gdbus-generated.h" line="182"/>
    </record>
    <interface name="PapersWindow"
               c:symbol-prefix="papers_window"
               c:type="PpsPapersWindow"
               glib:type-name="PpsPapersWindow"
               glib:get-type="pps_papers_window_get_type"
               glib:type-struct="PapersWindowIface">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="1514">Abstract interface type for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Papers-Window.top_of_page"&gt;org.gnome.Papers.Window&lt;/link&gt;.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="228"/>
      <function name="interface_info"
                c:identifier="pps_papers_window_interface_info">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1457">Gets a machine-readable description of the &lt;link linkend="gdbus-interface-org-gnome-Papers-Window.top_of_page"&gt;org.gnome.Papers.Window&lt;/link&gt; D-Bus interface.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="232"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="1462">A #GDBusInterfaceInfo. Do not free.</doc>
          <type name="Gio.DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
        </return-value>
      </function>
      <function name="override_properties"
                c:identifier="pps_papers_window_override_properties">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1470">Overrides all #GObject properties in the #PpsPapersWindow interface for a concrete class.
The properties are overridden in the order they are defined.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="233"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="1478">The last property id.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1472">The class structure for a #GObject derived class.</doc>
            <type name="GObject.ObjectClass" c:type="GObjectClass*"/>
          </parameter>
          <parameter name="property_id_begin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1473">The property id to assign to the first overridden property.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="closed">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1523">Handler for the #PpsPapersWindow::closed signal.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="221"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="PapersWindow" c:type="PpsPapersWindow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="document_loaded">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1524">Handler for the #PpsPapersWindow::document-loaded signal.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="224"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="PapersWindow" c:type="PpsPapersWindow*"/>
          </instance-parameter>
          <parameter name="arg_uri" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="emit_closed" c:identifier="pps_papers_window_emit_closed">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1577">Emits the &lt;link linkend="gdbus-signal-org-gnome-Papers-Window.Closed"&gt;"Closed"&lt;/link&gt; D-Bus signal.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="237"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1579">A #PpsPapersWindow.</doc>
            <type name="PapersWindow" c:type="PpsPapersWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="emit_document_loaded"
              c:identifier="pps_papers_window_emit_document_loaded">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1590">Emits the &lt;link linkend="gdbus-signal-org-gnome-Papers-Window.DocumentLoaded"&gt;"DocumentLoaded"&lt;/link&gt; D-Bus signal.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="240"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1592">A #PpsPapersWindow.</doc>
            <type name="PapersWindow" c:type="PpsPapersWindow*"/>
          </instance-parameter>
          <parameter name="arg_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1593">Argument to pass with the signal.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="closed" when="last">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1536">On the client-side, this signal is emitted whenever the D-Bus signal &lt;link linkend="gdbus-signal-org-gnome-Papers-Window.Closed"&gt;"Closed"&lt;/link&gt; is received.

On the service-side, this signal can be used with e.g. g_signal_emit_by_name() to make the object emit the D-Bus signal.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="document-loaded" when="last">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1555">On the client-side, this signal is emitted whenever the D-Bus signal &lt;link linkend="gdbus-signal-org-gnome-Papers-Window.DocumentLoaded"&gt;"DocumentLoaded"&lt;/link&gt; is received.

On the service-side, this signal can be used with e.g. g_signal_emit_by_name() to make the object emit the D-Bus signal.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg_uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1558">Argument.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <record name="PapersWindowIface"
            c:type="PpsPapersWindowIface"
            glib:is-gtype-struct-for="PapersWindow">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="1520">Virtual table for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Papers-Window.top_of_page"&gt;org.gnome.Papers.Window&lt;/link&gt;.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="228"/>
      <field name="parent_iface">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1522">The parent interface.</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="closed">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1523">Handler for the #PpsPapersWindow::closed signal.</doc>
        <callback name="closed">
          <source-position filename="shell/pps-gdbus-generated.h" line="221"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="PapersWindow" c:type="PpsPapersWindow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="document_loaded">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1524">Handler for the #PpsPapersWindow::document-loaded signal.</doc>
        <callback name="document_loaded">
          <source-position filename="shell/pps-gdbus-generated.h" line="224"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="PapersWindow" c:type="PpsPapersWindow*"/>
            </parameter>
            <parameter name="arg_uri" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="PapersWindowProxy"
           c:symbol-prefix="papers_window_proxy"
           c:type="PpsPapersWindowProxy"
           parent="Gio.DBusProxy"
           glib:type-name="PpsPapersWindowProxy"
           glib:get-type="pps_papers_window_proxy_get_type"
           glib:type-struct="PapersWindowProxyClass">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="1607">The #PpsPapersWindowProxy structure contains only private data and should only be accessed using the provided API.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="269"/>
      <implements name="Gio.AsyncInitable"/>
      <implements name="Gio.DBusInterface"/>
      <implements name="Gio.Initable"/>
      <implements name="PapersWindow"/>
      <constructor name="new_finish"
                   c:identifier="pps_papers_window_proxy_new_finish"
                   throws="1">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1798">Finishes an operation started with pps_papers_window_proxy_new().</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="285"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="1805">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="PapersWindowProxy" c:type="PpsPapersWindow*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1800">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to pps_papers_window_proxy_new().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_bus_finish"
                   c:identifier="pps_papers_window_proxy_new_for_bus_finish"
                   throws="1">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1888">Finishes an operation started with pps_papers_window_proxy_new_for_bus().</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="304"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="1895">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="PapersWindowProxy" c:type="PpsPapersWindow*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1890">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to pps_papers_window_proxy_new_for_bus().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_bus_sync"
                   c:identifier="pps_papers_window_proxy_new_for_bus_sync"
                   throws="1">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1913">Like pps_papers_window_proxy_new_sync() but takes a #GBusType instead of a #GDBusConnection.

The calling thread is blocked until a reply is received.

See pps_papers_window_proxy_new_for_bus() for the asynchronous version of this constructor.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="307"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="1928">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="PapersWindowProxy" c:type="PpsPapersWindow*"/>
        </return-value>
        <parameters>
          <parameter name="bus_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1915">A #GBusType.</doc>
            <type name="Gio.BusType" c:type="GBusType"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1916">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1917">A bus name (well-known or unique).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1918">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1919">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_sync"
                   c:identifier="pps_papers_window_proxy_new_sync"
                   throws="1">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1823">Synchronously creates a proxy for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Papers-Window.top_of_page"&gt;org.gnome.Papers.Window&lt;/link&gt;. See g_dbus_proxy_new_sync() for more details.

The calling thread is blocked until a reply is received.

See pps_papers_window_proxy_new() for the asynchronous version of this constructor.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="288"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="1838">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="PapersWindowProxy" c:type="PpsPapersWindow*"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1825">A #GDBusConnection.</doc>
            <type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1826">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1827">A bus name (well-known or unique) or %NULL if @connection is not a message bus connection.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1828">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1829">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="new"
                c:identifier="pps_papers_window_proxy_new"
                glib:finish-func="new_finish">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1768">Asynchronously creates a proxy for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Papers-Window.top_of_page"&gt;org.gnome.Papers.Window&lt;/link&gt;. See g_dbus_proxy_new() for more details.

When the operation is finished, @callback will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
You can then call pps_papers_window_proxy_new_finish() to get the result of the operation.

See pps_papers_window_proxy_new_sync() for the synchronous, blocking version of this constructor.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="277"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1770">A #GDBusConnection.</doc>
            <type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1771">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1772">A bus name (well-known or unique) or %NULL if @connection is not a message bus connection.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1773">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1774">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1775">A #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1776">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_for_bus"
                c:identifier="pps_papers_window_proxy_new_for_bus"
                glib:finish-func="new_for_bus_finish">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1858">Like pps_papers_window_proxy_new() but takes a #GBusType instead of a #GDBusConnection.

When the operation is finished, @callback will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
You can then call pps_papers_window_proxy_new_for_bus_finish() to get the result of the operation.

See pps_papers_window_proxy_new_for_bus_sync() for the synchronous, blocking version of this constructor.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="296"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="bus_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1860">A #GBusType.</doc>
            <type name="Gio.BusType" c:type="GBusType"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1861">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1862">A bus name (well-known or unique).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1863">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1864">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1865">A #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-gdbus-generated.c"
                 line="1866">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <field name="parent_instance" readable="0" private="1">
        <type name="Gio.DBusProxy" c:type="GDBusProxy"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="PapersWindowProxyPrivate"
              c:type="PpsPapersWindowProxyPrivate*"/>
      </field>
    </class>
    <record name="PapersWindowProxyClass"
            c:type="PpsPapersWindowProxyClass"
            glib:is-gtype-struct-for="PapersWindowProxy">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="1613">Class structure for #PpsPapersWindowProxy.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="269"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1615">The parent class.</doc>
        <type name="Gio.DBusProxyClass" c:type="GDBusProxyClass"/>
      </field>
    </record>
    <record name="PapersWindowProxyPrivate"
            c:type="PpsPapersWindowProxyPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="shell/pps-gdbus-generated.h" line="257"/>
    </record>
    <class name="PapersWindowSkeleton"
           c:symbol-prefix="papers_window_skeleton"
           c:type="PpsPapersWindowSkeleton"
           parent="Gio.DBusInterfaceSkeleton"
           glib:type-name="PpsPapersWindowSkeleton"
           glib:get-type="pps_papers_window_skeleton_get_type"
           glib:type-struct="PapersWindowSkeletonClass">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="1950">The #PpsPapersWindowSkeleton structure contains only private data and should only be accessed using the provided API.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="339"/>
      <implements name="Gio.DBusInterface"/>
      <implements name="PapersWindow"/>
      <constructor name="new" c:identifier="pps_papers_window_skeleton_new">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="2269">Creates a skeleton object for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Papers-Window.top_of_page"&gt;org.gnome.Papers.Window&lt;/link&gt;.</doc>
        <source-position filename="shell/pps-gdbus-generated.h" line="347"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="2274">The skeleton object.</doc>
          <type name="PapersWindowSkeleton" c:type="PpsPapersWindow*"/>
        </return-value>
      </constructor>
      <field name="parent_instance" readable="0" private="1">
        <type name="Gio.DBusInterfaceSkeleton"
              c:type="GDBusInterfaceSkeleton"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="PapersWindowSkeletonPrivate"
              c:type="PpsPapersWindowSkeletonPrivate*"/>
      </field>
    </class>
    <record name="PapersWindowSkeletonClass"
            c:type="PpsPapersWindowSkeletonClass"
            glib:is-gtype-struct-for="PapersWindowSkeleton">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="1956">Class structure for #PpsPapersWindowSkeleton.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="339"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1958">The parent class.</doc>
        <type name="Gio.DBusInterfaceSkeletonClass"
              c:type="GDBusInterfaceSkeletonClass"/>
      </field>
    </record>
    <record name="PapersWindowSkeletonPrivate"
            c:type="PpsPapersWindowSkeletonPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="shell/pps-gdbus-generated.h" line="327"/>
    </record>
    <docsection name="PpsObject">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="2287">This section contains the #PpsObject, #PpsObjectProxy, and #PpsObjectSkeleton types which make it easier to work with objects implementing generated types for D-Bus interfaces.</doc>
    </docsection>
    <docsection name="PpsObjectManagerClient">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="2684">This section contains a #GDBusObjectManagerClient that uses pps_object_manager_client_get_proxy_type() as the #GDBusProxyTypeFunc.</doc>
    </docsection>
    <docsection name="PpsPapersApplication">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="293">This section contains code for working with the &lt;link linkend="gdbus-interface-org-gnome-Papers-Application.top_of_page"&gt;org.gnome.Papers.Application&lt;/link&gt; D-Bus interface in C.</doc>
    </docsection>
    <docsection name="PpsPapersWindow">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="1379">This section contains code for working with the &lt;link linkend="gdbus-interface-org-gnome-Papers-Window.top_of_page"&gt;org.gnome.Papers.Window&lt;/link&gt; D-Bus interface in C.</doc>
    </docsection>
    <enumeration name="PrintPageSet"
                 glib:type-name="PpsPrintPageSet"
                 glib:get-type="pps_print_page_set_get_type"
                 c:type="PpsPrintPageSet">
      <member name="all"
              value="0"
              c:identifier="PPS_PRINT_PAGE_SET_ALL"
              glib:nick="all"
              glib:name="PPS_PRINT_PAGE_SET_ALL">
      </member>
      <member name="even"
              value="1"
              c:identifier="PPS_PRINT_PAGE_SET_EVEN"
              glib:nick="even"
              glib:name="PPS_PRINT_PAGE_SET_EVEN">
      </member>
      <member name="odd"
              value="2"
              c:identifier="PPS_PRINT_PAGE_SET_ODD"
              glib:nick="odd"
              glib:name="PPS_PRINT_PAGE_SET_ODD">
      </member>
    </enumeration>
    <record name="PrintRange" c:type="PpsPrintRange">
      <source-position filename="shell/pps-window.h" line="49"/>
      <field name="start" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="end" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
    </record>
    <interface name="SidebarPage"
               c:symbol-prefix="sidebar_page"
               c:type="PpsSidebarPage"
               glib:type-name="PpsSidebarPage"
               glib:get-type="pps_sidebar_page_get_type"
               glib:type-struct="SidebarPageInterface">
      <source-position filename="shell/pps-sidebar-page.h" line="43"/>
      <virtual-method name="set_model" invoker="set_model">
        <source-position filename="shell/pps-sidebar-page.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sidebar_page" transfer-ownership="none">
            <type name="SidebarPage" c:type="PpsSidebarPage*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <type name="PapersView.DocumentModel" c:type="PpsDocumentModel*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="support_document" invoker="support_document">
        <source-position filename="shell/pps-sidebar-page.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sidebar_page" transfer-ownership="none">
            <type name="SidebarPage" c:type="PpsSidebarPage*"/>
          </instance-parameter>
          <parameter name="document" transfer-ownership="none">
            <type name="PapersDocument.Document" c:type="PpsDocument*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="set_model" c:identifier="pps_sidebar_page_set_model">
        <source-position filename="shell/pps-sidebar-page.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sidebar_page" transfer-ownership="none">
            <type name="SidebarPage" c:type="PpsSidebarPage*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <type name="PapersView.DocumentModel" c:type="PpsDocumentModel*"/>
          </parameter>
        </parameters>
      </method>
      <method name="support_document"
              c:identifier="pps_sidebar_page_support_document">
        <source-position filename="shell/pps-sidebar-page.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sidebar_page" transfer-ownership="none">
            <type name="SidebarPage" c:type="PpsSidebarPage*"/>
          </instance-parameter>
          <parameter name="document" transfer-ownership="none">
            <type name="PapersDocument.Document" c:type="PpsDocument*"/>
          </parameter>
        </parameters>
      </method>
      <property name="document-model"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="PapersView.DocumentModel"/>
      </property>
    </interface>
    <record name="SidebarPageInterface"
            c:type="PpsSidebarPageInterface"
            glib:is-gtype-struct-for="SidebarPage">
      <source-position filename="shell/pps-sidebar-page.h" line="43"/>
      <field name="base_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="support_document">
        <callback name="support_document">
          <source-position filename="shell/pps-sidebar-page.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="sidebar_page" transfer-ownership="none">
              <type name="SidebarPage" c:type="PpsSidebarPage*"/>
            </parameter>
            <parameter name="document" transfer-ownership="none">
              <type name="PapersDocument.Document" c:type="PpsDocument*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_model">
        <callback name="set_model">
          <source-position filename="shell/pps-sidebar-page.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sidebar_page" transfer-ownership="none">
              <type name="SidebarPage" c:type="PpsSidebarPage*"/>
            </parameter>
            <parameter name="model" transfer-ownership="none">
              <type name="PapersView.DocumentModel"
                    c:type="PpsDocumentModel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="Window"
           c:symbol-prefix="window"
           c:type="PpsWindow"
           parent="Adw.ApplicationWindow"
           glib:type-name="PpsWindow"
           glib:get-type="pps_window_get_type"
           glib:type-struct="WindowClass">
      <source-position filename="shell/pps-window.h" line="58"/>
      <implements name="Gio.ActionGroup"/>
      <implements name="Gio.ActionMap"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Native"/>
      <implements name="Gtk.Root"/>
      <implements name="Gtk.ShortcutManager"/>
      <constructor name="new" c:identifier="pps_window_new">
        <doc xml:space="preserve"
             filename="shell/pps-window.c"
             line="6694">Creates a #GtkWidget that represents the window.</doc>
        <source-position filename="shell/pps-window.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-window.c"
               line="6699">the #GtkWidget that represents the window.</doc>
          <type name="Window" c:type="PpsWindow*"/>
        </return-value>
      </constructor>
      <method name="focus_view" c:identifier="pps_window_focus_view">
        <source-position filename="shell/pps-window.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pps_window" transfer-ownership="none">
            <type name="Window" c:type="PpsWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_dbus_object_path"
              c:identifier="pps_window_get_dbus_object_path">
        <source-position filename="shell/pps-window.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pps_window" transfer-ownership="none">
            <type name="Window" c:type="PpsWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_header_bar" c:identifier="pps_window_get_header_bar">
        <source-position filename="shell/pps-window.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-window.c"
               line="6727">the #AdwHeaderBar that represents the toolbar of the window.</doc>
          <type name="Adw.HeaderBar" c:type="AdwHeaderBar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pps_window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-window.c"
                 line="6725">the #PpsWindow</doc>
            <type name="Window" c:type="PpsWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_metadata" c:identifier="pps_window_get_metadata">
        <source-position filename="shell/pps-window.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-window.c"
               line="6756">the #PpsMetadata of the document shown in the window.</doc>
          <type name="Metadata" c:type="PpsMetadata*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pps_window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-window.c"
                 line="6754">the #PpsWindow</doc>
            <type name="Window" c:type="PpsWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uri" c:identifier="pps_window_get_uri">
        <doc xml:space="preserve"
             filename="shell/pps-window.c"
             line="1764">It returns the uri of the document showed in the #PpsWindow.</doc>
        <source-position filename="shell/pps-window.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-window.c"
               line="1770">the uri of the document showed in the #PpsWindow.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pps_window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-window.c"
                 line="1766">The instance of the #PpsWindow.</doc>
            <type name="Window" c:type="PpsWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="handle_annot_popup"
              c:identifier="pps_window_handle_annot_popup">
        <source-position filename="shell/pps-window.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pps_window" transfer-ownership="none">
            <type name="Window" c:type="PpsWindow*"/>
          </instance-parameter>
          <parameter name="annot" transfer-ownership="none">
            <type name="PapersDocument.Annotation" c:type="PpsAnnotation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_empty" c:identifier="pps_window_is_empty">
        <doc xml:space="preserve"
             filename="shell/pps-window.c"
             line="573">It does look if there is any document loaded or if there is any job to load
a document.</doc>
        <source-position filename="shell/pps-window.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-window.c"
               line="580">%TRUE if there isn't any document loaded or any any documente to be
         loaded, %FALSE in other case.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="pps_window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-window.c"
                 line="575">The instance of the #PpsWindow.</doc>
            <type name="Window" c:type="PpsWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="open_document" c:identifier="pps_window_open_document">
        <source-position filename="shell/pps-window.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pps_window" transfer-ownership="none">
            <type name="Window" c:type="PpsWindow*"/>
          </instance-parameter>
          <parameter name="document" transfer-ownership="none">
            <type name="PapersDocument.Document" c:type="PpsDocument*"/>
          </parameter>
          <parameter name="dest" transfer-ownership="none">
            <type name="PapersDocument.LinkDest" c:type="PpsLinkDest*"/>
          </parameter>
          <parameter name="mode" transfer-ownership="none">
            <type name="WindowRunMode" c:type="PpsWindowRunMode"/>
          </parameter>
          <parameter name="search_string" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open_uri" c:identifier="pps_window_open_uri">
        <source-position filename="shell/pps-window.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pps_window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-window.c"
                 line="2134">a `PpsWindow`</doc>
            <type name="Window" c:type="PpsWindow*"/>
          </instance-parameter>
          <parameter name="uri" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-window.c"
                 line="2135">uri to open</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="dest"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-window.c"
                 line="2136">destination to point to</doc>
            <type name="PapersDocument.LinkDest" c:type="PpsLinkDest*"/>
          </parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="shell/pps-window.c"
                 line="2137">open mode</doc>
            <type name="WindowRunMode" c:type="PpsWindowRunMode"/>
          </parameter>
          <parameter name="search_string"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="shell/pps-window.c"
                 line="2138">window will search this string if specified</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="print_range" c:identifier="pps_window_print_range">
        <source-position filename="shell/pps-window.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pps_window" transfer-ownership="none">
            <type name="Window" c:type="PpsWindow*"/>
          </instance-parameter>
          <parameter name="first_page" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="last_page" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <field name="base_instance">
        <type name="Adw.ApplicationWindow" c:type="AdwApplicationWindow"/>
      </field>
    </class>
    <record name="WindowClass"
            c:type="PpsWindowClass"
            glib:is-gtype-struct-for="Window">
      <source-position filename="shell/pps-window.h" line="58"/>
      <field name="parent_class">
        <type name="Adw.ApplicationWindowClass"
              c:type="AdwApplicationWindowClass"/>
      </field>
    </record>
    <enumeration name="WindowRunMode"
                 glib:type-name="PpsWindowRunMode"
                 glib:get-type="pps_window_run_mode_get_type"
                 c:type="PpsWindowRunMode">
      <member name="normal"
              value="0"
              c:identifier="PPS_WINDOW_MODE_NORMAL"
              glib:nick="normal"
              glib:name="PPS_WINDOW_MODE_NORMAL">
      </member>
      <member name="fullscreen"
              value="1"
              c:identifier="PPS_WINDOW_MODE_FULLSCREEN"
              glib:nick="fullscreen"
              glib:name="PPS_WINDOW_MODE_FULLSCREEN">
      </member>
      <member name="presentation"
              value="2"
              c:identifier="PPS_WINDOW_MODE_PRESENTATION"
              glib:nick="presentation"
              glib:name="PPS_WINDOW_MODE_PRESENTATION">
      </member>
      <member name="start_view"
              value="3"
              c:identifier="PPS_WINDOW_MODE_START_VIEW"
              glib:nick="start-view"
              glib:name="PPS_WINDOW_MODE_START_VIEW">
      </member>
      <member name="error_view"
              value="4"
              c:identifier="PPS_WINDOW_MODE_ERROR_VIEW"
              glib:nick="error-view"
              glib:name="PPS_WINDOW_MODE_ERROR_VIEW">
      </member>
      <member name="password_view"
              value="5"
              c:identifier="PPS_WINDOW_MODE_PASSWORD_VIEW"
              glib:nick="password-view"
              glib:name="PPS_WINDOW_MODE_PASSWORD_VIEW">
      </member>
    </enumeration>
    <function name="get_resource" c:identifier="pps_get_resource">
      <source-position filename="shell/pps-resources.h" line="6"/>
      <return-value transfer-ownership="full">
        <type name="Gio.Resource" c:type="GResource*"/>
      </return-value>
    </function>
    <function name="is_metadata_supported_for_file"
              c:identifier="pps_is_metadata_supported_for_file">
      <source-position filename="shell/pps-metadata.h" line="67"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="Gio.File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="papers_application_interface_info"
              c:identifier="pps_papers_application_interface_info"
              moved-to="PapersApplication.interface_info">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="384">Gets a machine-readable description of the &lt;link linkend="gdbus-interface-org-gnome-Papers-Application.top_of_page"&gt;org.gnome.Papers.Application&lt;/link&gt; D-Bus interface.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="46"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="389">A #GDBusInterfaceInfo. Do not free.</doc>
        <type name="Gio.DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
      </return-value>
    </function>
    <function name="papers_application_override_properties"
              c:identifier="pps_papers_application_override_properties"
              moved-to="PapersApplication.override_properties">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="397">Overrides all #GObject properties in the #PpsPapersApplication interface for a concrete class.
The properties are overridden in the order they are defined.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="47"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="405">The last property id.</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="klass" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="399">The class structure for a #GObject derived class.</doc>
          <type name="GObject.ObjectClass" c:type="GObjectClass*"/>
        </parameter>
        <parameter name="property_id_begin" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="400">The property id to assign to the first overridden property.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="papers_window_interface_info"
              c:identifier="pps_papers_window_interface_info"
              moved-to="PapersWindow.interface_info">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="1457">Gets a machine-readable description of the &lt;link linkend="gdbus-interface-org-gnome-Papers-Window.top_of_page"&gt;org.gnome.Papers.Window&lt;/link&gt; D-Bus interface.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="232"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1462">A #GDBusInterfaceInfo. Do not free.</doc>
        <type name="Gio.DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
      </return-value>
    </function>
    <function name="papers_window_override_properties"
              c:identifier="pps_papers_window_override_properties"
              moved-to="PapersWindow.override_properties">
      <doc xml:space="preserve"
           filename="shell/pps-gdbus-generated.c"
           line="1470">Overrides all #GObject properties in the #PpsPapersWindow interface for a concrete class.
The properties are overridden in the order they are defined.</doc>
      <source-position filename="shell/pps-gdbus-generated.h" line="233"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="shell/pps-gdbus-generated.c"
             line="1478">The last property id.</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="klass" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="1472">The class structure for a #GObject derived class.</doc>
          <type name="GObject.ObjectClass" c:type="GObjectClass*"/>
        </parameter>
        <parameter name="property_id_begin" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="shell/pps-gdbus-generated.c"
               line="1473">The property id to assign to the first overridden property.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="shell_marshal_VOID__POINTER_POINTER"
              c:identifier="pps_shell_marshal_VOID__POINTER_POINTER">
      <source-position filename="shell/pps-shell-marshal.h" line="10"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="return_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="n_param_values" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="param_values" transfer-ownership="none">
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
        <parameter name="invocation_hint"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="marshal_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
