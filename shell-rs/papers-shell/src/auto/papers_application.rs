// This file was generated by gir (https://github.com/gtk-rs/gir)
// from ../ev-girs
// from ../gir-files
// DO NOT EDIT

use glib::prelude::*;

glib::wrapper! {
    #[doc(alias = "PpsPapersApplication")]
    pub struct PapersApplication(Interface<ffi::PpsPapersApplication, ffi::PpsPapersApplicationIface>);

    match fn {
        type_ => || ffi::pps_papers_application_get_type(),
    }
}

impl PapersApplication {
    pub const NONE: Option<&'static PapersApplication> = None;

    //#[doc(alias = "pps_papers_application_interface_info")]
    //pub fn interface_info() -> /*Ignored*/Option<gio::DBusInterfaceInfo> {
    //    unsafe { TODO: call ffi:pps_papers_application_interface_info() }
    //}

    //#[doc(alias = "pps_papers_application_override_properties")]
    //pub fn override_properties(klass: /*Ignored*/&mut glib::ObjectClass, property_id_begin: u32) -> u32 {
    //    unsafe { TODO: call ffi:pps_papers_application_override_properties() }
    //}
}

mod sealed {
    pub trait Sealed {}
    impl<T: super::IsA<super::PapersApplication>> Sealed for T {}
}

pub trait PapersApplicationExt: IsA<PapersApplication> + sealed::Sealed + 'static {}

impl<O: IsA<PapersApplication>> PapersApplicationExt for O {}
