// This file was generated by gir (https://github.com/gtk-rs/gir)
// from ../../ev-girs
// from ../../gir-files
// DO NOT EDIT

#![allow(non_camel_case_types, non_upper_case_globals, non_snake_case)]
#![allow(
    clippy::approx_constant,
    clippy::type_complexity,
    clippy::unreadable_literal,
    clippy::upper_case_acronyms
)]
#![cfg_attr(docsrs, feature(doc_cfg))]

use gdk_pixbuf_sys as gdk_pixbuf;
use gio_sys as gio;
use glib_sys as glib;
use gtk_sys as gtk;
use papers_document_sys as papers_document;
use papers_view_sys as papers_view;

#[allow(unused_imports)]
use libc::{
    c_char, c_double, c_float, c_int, c_long, c_short, c_uchar, c_uint, c_ulong, c_ushort, c_void,
    intptr_t, off_t, size_t, ssize_t, time_t, uintptr_t, FILE,
};
#[cfg(unix)]
#[allow(unused_imports)]
use libc::{dev_t, gid_t, pid_t, socklen_t, uid_t};

#[allow(unused_imports)]
use glib::{gboolean, gconstpointer, gpointer, GType};

// Records
#[derive(Copy, Clone)]
#[repr(C)]
pub struct PpsProgressMessageAreaClass {
    pub parent_class: adw::AdwBinClass,
}

impl ::std::fmt::Debug for PpsProgressMessageAreaClass {
    fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {
        f.debug_struct(&format!("PpsProgressMessageAreaClass @ {self:p}"))
            .field("parent_class", &self.parent_class)
            .finish()
    }
}

// Classes
#[derive(Copy, Clone)]
#[repr(C)]
pub struct PpsProgressMessageArea {
    pub parent_instance: adw::AdwBin,
}

impl ::std::fmt::Debug for PpsProgressMessageArea {
    fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {
        f.debug_struct(&format!("PpsProgressMessageArea @ {self:p}"))
            .field("parent_instance", &self.parent_instance)
            .finish()
    }
}

#[link(name = "ppsshell-4.0")]
#[link(name = "ppsview-4.0")]
#[link(name = "ppsdocument-4.0")]
extern "C" {

    //=========================================================================
    // PpsProgressMessageArea
    //=========================================================================
    pub fn pps_progress_message_area_get_type() -> GType;
    pub fn pps_progress_message_area_new(
        icon_name: *const c_char,
        text: *const c_char,
    ) -> *mut gtk::GtkWidget;
    pub fn pps_progress_message_area_add_button(
        area: *mut PpsProgressMessageArea,
        first_button_text: *const c_char,
        response_id: c_int,
    );
    pub fn pps_progress_message_area_get_info_bar(
        area: *mut PpsProgressMessageArea,
    ) -> *mut gtk::GtkInfoBar;
    pub fn pps_progress_message_area_set_fraction(
        area: *mut PpsProgressMessageArea,
        fraction: c_double,
    );
    pub fn pps_progress_message_area_set_image_from_icon_name(
        area: *mut PpsProgressMessageArea,
        icon_name: *const c_char,
    );
    pub fn pps_progress_message_area_set_secondary_text(
        area: *mut PpsProgressMessageArea,
        str: *const c_char,
    );
    pub fn pps_progress_message_area_set_status(
        area: *mut PpsProgressMessageArea,
        str: *const c_char,
    );
    pub fn pps_progress_message_area_set_text(
        area: *mut PpsProgressMessageArea,
        str: *const c_char,
    );

    //=========================================================================
    // Other functions
    //=========================================================================
    pub fn pps_get_resource() -> *mut gio::GResource;

}
